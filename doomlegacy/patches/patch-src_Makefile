$NetBSD$

Add NetBSD to OS list.
Honor environment variables CFLAGS, LDFLAGS and LIBS.
Silence warnings about common symbol merging.

--- src/Makefile.orig	2018-07-16 09:17:06.000000000 +0000
+++ src/Makefile
@@ -449,13 +449,13 @@ endif
 endif
 
 
-OS_LIST:=LINUX FREEBSD WIN32 WIN7 WIN98 OS2 DOS MAC
+OS_LIST:=LINUX FREEBSD NETBSD WIN32 WIN7 WIN98 OS2 DOS MAC
 
 OPTS:=
 
 ifeq ($(OS), LINUX)
   LINUX=1
-  OPTS:=-DLINUX
+  OPTS+=-DLINUX
   #Known Compiler symbols
   # linux  __linux  __linux__
   # AIX defines: _AIX
@@ -474,15 +474,23 @@ else
 ifeq ($(OS), FREEBSD)
   # Has some linking differences from the rest of Linux-like OS.
   FREEBSD=1
-  OPTS:=-DLINUX -DFREEBSD
+  OPTS+=-DLINUX -DFREEBSD
   #Known Compiler symbols
   # __FreeBSD__  __FreeBSD_kernel__  __DragonFly__
   # SDL_platform.h for FreeBSD defines: __FREEBSD__
 else
+ifeq ($(OS), NETBSD)
+  # Uses statvfs(5).
+  NETBSD=1
+  OPTS+=-DLINUX -DNETBSD
+  #Known Compiler symbols
+  # __NetBSD__
+  # SDL_platform.h for NetBSD defines: __NETBSD__
+else
 ifeq ($(OS), WIN32)
   WIN32=1
   DOSFILE=1
-  OPTS:=-DWIN32
+  OPTS+=-DWIN32
   # if have windows > Win98, and want large memory reports
   ifdef WIN_LARGE_MEM
     OPTS+=-DWIN_LARGE_MEM
@@ -500,7 +508,7 @@ ifeq ($(OS), WIN7)
   # This does  NOT YET  make a version customized to Win7/8.
   WIN32=1
   DOSFILE=1
-  OPTS:=-DWIN32
+  OPTS+=-DWIN32
   # probably want large memory reports
   OPTS+=-DWIN_LARGE_MEM
   #Known Compiler symbols
@@ -511,12 +519,12 @@ ifeq ($(OS), WIN98)
   # If Win98 differences occur, this category can isolate them.
   WIN32=1
   DOSFILE=1
-  OPTS:=-DWIN32
+  OPTS+=-DWIN32
 else
 ifeq ($(OS), OS2)
   OS2=1
   DOSFILE=1
-  OPTS:=-D__OS2__
+  OPTS+=-D__OS2__
   #Known Compiler symbols
   # __OS2__
 else
@@ -545,13 +553,38 @@ endif
 endif
 endif
 endif
+endif
 export DOSFILE
 
+# OPTS goes to the C compiler and assembler.
+# OPTS is almost all defines using -D. It selects conditional code.
+# CFLAGS only goes to the C compiler.  It gets a copy of OPTS.
+# LDFLAGS goes to the linker.  Some linkers cannot handle OPTS.
+# LIBS goes to the linker.
+
+ifdef COMP_ENVIRONMENT
+  # Things like this will always have an enabling control.
+  # Otherwise, something that is useful on one system, will be a surprise on another system.
+  # And it is very hard to debug other systems when unknown settings
+  # are allowed to influence compiling, without any control or notification.
+
+  # NETBSD: Include the environment CFLAGS in OPTS.
+  # (This is what I got from the NETBSD user, and don't know why it
+  #  goes in OPTS instead of CFLAGS.)
+  OPTS+=$(CFLAGS)
+#  ENV_CFLAGS=$(CFLAGS)
+
+  # NETBSD: Has environment settings that should be used?
+  # Do not reset LIBS, use the LIBS from the environment.
+  # Do not reset LDFLAGS, use the LDFLAGS from the environment.
+else
+  LIBS:=
+  LDFLAGS:=
+endif
+
 # all OPTINC need to have -I. because of how includes are written
 # however the order of -I may be important, so it is left to each SMIF.
 OPTINC:=
-LIBS:=
-LDFLAGS:=
 INSTALL_SUPPL:=
 
 CFLAGS:=
@@ -568,6 +601,10 @@ ifdef ARCH
   endif
 endif
 
+ifdef ENV_CFLAGS
+  CFLAGS+=$(ENV_CFLAGS)
+endif
+
 
 #=================================
 ifeq ($(SMIF), SDL)
@@ -597,14 +634,14 @@ ifeq ($(SMIF), SDL)
     ifndef MAC
       # default is Linux, for all unix SDL
       EXENAME:=doomlegacy
-      LDFLAGS=-L/usr/X11R6/lib
-      LIBS:=-lGL -lGLU -lm
+      LDFLAGS+=-L/usr/X11R6/lib
+      LIBS+=-lGL -lGLU -lm
       # -L/usr/X11R6/lib is needed by Linux 2.4 and others that still have
       # the GLU libraries in an X11 directory.
       # -lm is needed for pow, powf, and other MATH1 functions.
     else
       EXENAME:=doomlegacy
-      LDFLAGS=-framework OpenGL
+      LDFLAGS+=-framework OpenGL
     endif
 
     SDL_CONFIG:=1
@@ -1013,9 +1050,13 @@ CFLAGS+=$(OPTS) $(OPTINC)
 ifdef MAC
   # MAC linker does not accept these flags.
 else
+ifdef NETBSD
+  # NETBSD linker does not accept these flags.
+else
   # Flags to the linker.
   LDFLAGS+=-Xlinker --warn-common
 endif
+endif
 
 SNDSERV_EXTRAFLAGS:=
 ifdef HAVE_ESD
